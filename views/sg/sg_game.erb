<%
%>

<style>
.highlighted {
  color: gold;
}
.box {
  height: 200px;
  width: 200px;
  background-color: lightgreen;
  /*margin:20px;*/
  border:1px solid black;
  display: inline-block;
  vertical-align: top;
  text-align: center;
  font-size: 30px;
  cursor: pointer;
}
.box.sample_val {
  color: black;
}
.box.choose_val {
  color: red;
}
.disabled {
  cursor: not-allowed;
}
.box.disabled {
  background-color: darkgrey;
  color:white;
}
.box.blocked {
  background-color: lightgrey;
  padding-top:20px;
  /*font-size:100px;*/
  color:red;
}
.sample_or_choose {
  background-color: lightblue;
  display: inline-block;
  width: 150px;

  cursor: not-allowed;
  font-weight: bold;
  text-align: center;
}
.sample_or_choose.disabled {
  font-weight: normal;
  cursor: pointer;
  background-color: whitesmoke;
}
.not_your_turn {
  position: absolute;
  height: 100%;
  width: 80%;
  opacity: 0.6;
  font-weight: bold;
  background-color: lightgrey;
  z-index: 999;
}
</style>


<div class='not_your_turn' style='text-align: center'>
      <div style='margin-top:100px'>
        Wait for your turn
      </div>
    </div>
<h1> The Sampling Game </h1>

<div style='font-size:30px; font-weight: bold'>Round <span class='round_num'></span></div>
<div class='status'>
</div>
<section style='margin-bottom: 20px;'>

  <div class='curTurnHolder'>Current Turn: <span class='curTurn'></span></div>
  <div class='sample_or_choose sample' onclick=sampleOrChooseState("sample")>
  Sample
  </div>
  <div class='sample_or_choose choose disabled' onclick=sampleOrChooseState("choose")>
  Choose
  </div>
</section>

<section>
<div class='box 1' onclick=onBoxClick(1)>  </div>
<div class='box 2' onclick=onBoxClick(2)>  </div>
<div class='box 3' onclick=onBoxClick(3)>  </div>
<div class='box 4' onclick=onBoxClick(4)>  </div>
</section>
<script>
log = console.log
user_id = "<%= sesh[:user_id] %>";
//window.time = 2;
window.practice_over = false;
function updateTurn(user_id) {
  $('.curTurn').html(user_id)
  if (user_id == window.user_id) {
      $('.not_your_turn').hide();   
      clickingEnabled = true;    
  } else {
   $('.not_your_turn').show(); 
 }
}

function refreshData() { 
  $.get('/sg/state?game_id=<%=sesh[:game_id]%>').success(r=>{
    var data = r;

    //on new round
    //if (window.d && (data.round > window.d.round)) { $('.box').removeClass('disabled') }
    //console.log(r.game_over)
    if (r.game_over) {
      alert('game over!')
      document.location.href = '/sg/game_over'
    }

    if (r.practice_over && !window.practice_over) {
      window.practice_over = true;
      alert('Practice is over!');
    }
      
    //var curTurn = (data.user_ids[data.turn % data.user_ids.length])
    var curTurn = data.cur_turn;
    updateTurn(curTurn)

    data.user_id = window.user_id;

    //new round 
    if (data.chosen_buttons.length == 0) { 
      $('.box').removeClass('disabled').removeClass('blocked').html('') 
      clickingEnabled = true;      
      window.already_chosen = false;
    }

    //mark blocked boxes
    allowed_boxes = data.roles[data.user_ids.indexOf(window.user_id)];
    blocked_boxes = [1,2,3,4].filter(z=>allowed_boxes.indexOf(z)==-1)
    console.log('blocked boxes: ',blocked_boxes)
    blocked_boxes.forEach(idx=> { 
      $('.box.'+idx).addClass('blocked').html("<i class='fa fa-close'></i>");
    })

    data.chosen_buttons.forEach(boxID=>{
      $('.box.'+boxID).addClass('disabled').html('Chosen');
    })

    window.d = data;
    $('.status').html(JSON.stringify(data))

    var highlight = false;
    if ((parseInt($('.round_num').text())-1) < data.round) highlight = true;      
    $('.round_num').html(parseInt(data.round)+1);    
    if (highlight) {
      $('.round_num').addClass('highlighted');
      setTimeout(function () {$('.round_num').removeClass('highlighted'); }, 1000); 
    }

    setTimeout(refreshData,(window.time || 1) * 1000)
  })
}

function onBoxClick(a) {
  if ($('.box.'+a).hasClass('disabled') || $('.box.'+a).hasClass('blocked')) {
    return;
  }
  if (!clickingEnabled) {
    console.log('skipping since clickingEnabled is false')
    return
  }

  var numModUsers=1;
  if (window.d.user_ids.length % numModUsers != 0 ) {
    return alert('There are currently '+window.d.user_ids.length+' users connected; please wait until the number of users is '+numModUsers)
  }

  clickingEnabled = false;
  already_chosen  = true;
  var id = a;
  $.get('/sg/move?game_id=<%=sesh[:game_id]%>&box='+id+'&phase='+window.phase).success(r=> {
    $('.box.'+id).html(r.val).addClass(window.phase+'_val');
    
    setTimeout(()=> {
      $('.box.'+id).html('').removeClass('sample_val').removeClass('choose_val')
    },(1000));
  })
}

window.phase = 'sample';
function sampleOrChooseState(state) {
  window.phase = state;
  $('.sample_or_choose').addClass('disabled')
  $('.sample_or_choose.'+state).removeClass('disabled')
}
//$('.sample_or_choose').click()

//$('.box').addClass('disabled')
//$('.box').click(onBoxClick)


//setInterval(refreshData,window.time || 1 * 1000)
refreshData()
</script>